{"is_source_file": true, "format": "Python", "description": "This file defines the NotesService class, which provides business logic and validation for managing notes in an application. It serves as an intermediary between the API layer and the data repository, encapsulating operations such as listing, retrieving, creating, updating, and deleting notes.", "external_files": ["../repositories/notes_repository", "../models/note"], "external_methods": ["NotesRepository.list_notes", "NotesRepository.get_note", "NotesRepository.create_note", "NotesRepository.update_note", "NotesRepository.delete_note"], "published": ["NotesService"], "classes": [{"name": "NotesService", "description": "Provides operations on notes with validation and business rules."}], "methods": [{"name": "__init__(self, db: Session)", "description": "Initializes the NotesService with a database session and a notes repository.", "scope": "NotesService", "scopeKind": "class"}, {"name": "list[Note] list_notes(self, skip: int = 0, limit: int = 50)", "description": "Returns a paginated list of notes, enforcing sane limits.", "scope": "NotesService", "scopeKind": "class"}, {"name": "Optional[Note] get_note(self, note_id: int)", "description": "Retrieves a single note by ID.", "scope": "NotesService", "scopeKind": "class"}, {"name": "Note create_note(self, title: str, content: str)", "description": "Creates a new note after validating that the title is provided.", "scope": "NotesService", "scopeKind": "class"}, {"name": "Optional[Note] update_note(self, note_id: int, *, title: str | None, content: str | None)", "description": "Updates an existing note if it exists, with validation on the new title.", "scope": "NotesService", "scopeKind": "class"}, {"name": "bool delete_note(self, note_id: int)", "description": "Deletes a note by ID, returning True if successful.", "scope": "NotesService", "scopeKind": "class"}], "calls": ["self.repo.list_notes", "self.repo.get_note", "self.repo.create_note", "self.repo.update_note", "self.repo.delete_note"], "search-terms": ["NotesService", "notes_business_logic", "note_management", "note_operations", "notes_repository"], "state": 2, "file_id": 10, "knowledge_revision": 22, "git_revision": "", "ctags": [{"_type": "tag", "name": "NotesService", "path": "/home/kavia/workspace/code-generation/note-keeper-14810-14832/notes_backend/src/api/services/notes_service.py", "pattern": "/^class NotesService:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/note-keeper-14810-14832/notes_backend/src/api/services/notes_service.py", "pattern": "/^    def __init__(self, db: Session):$/", "language": "Python", "kind": "member", "signature": "(self, db: Session)", "scope": "NotesService", "scopeKind": "class"}, {"_type": "tag", "name": "create_note", "path": "/home/kavia/workspace/code-generation/note-keeper-14810-14832/notes_backend/src/api/services/notes_service.py", "pattern": "/^    def create_note(self, title: str, content: str) -> Note:$/", "language": "Python", "typeref": "typename:Note", "kind": "member", "signature": "(self, title: str, content: str)", "scope": "NotesService", "scopeKind": "class"}, {"_type": "tag", "name": "delete_note", "path": "/home/kavia/workspace/code-generation/note-keeper-14810-14832/notes_backend/src/api/services/notes_service.py", "pattern": "/^    def delete_note(self, note_id: int) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "member", "signature": "(self, note_id: int)", "scope": "NotesService", "scopeKind": "class"}, {"_type": "tag", "name": "get_note", "path": "/home/kavia/workspace/code-generation/note-keeper-14810-14832/notes_backend/src/api/services/notes_service.py", "pattern": "/^    def get_note(self, note_id: int) -> Optional[Note]:$/", "language": "Python", "typeref": "typename:Optional[Note]", "kind": "member", "signature": "(self, note_id: int)", "scope": "NotesService", "scopeKind": "class"}, {"_type": "tag", "name": "list_notes", "path": "/home/kavia/workspace/code-generation/note-keeper-14810-14832/notes_backend/src/api/services/notes_service.py", "pattern": "/^    def list_notes(self, skip: int = 0, limit: int = 50) -> list[Note]:$/", "language": "Python", "typeref": "typename:list[Note]", "kind": "member", "signature": "(self, skip: int = 0, limit: int = 50)", "scope": "NotesService", "scopeKind": "class"}, {"_type": "tag", "name": "update_note", "path": "/home/kavia/workspace/code-generation/note-keeper-14810-14832/notes_backend/src/api/services/notes_service.py", "pattern": "/^    def update_note(self, note_id: int, *, title: str | None, content: str | None) -> Optional[N/", "language": "Python", "typeref": "typename:Optional[Note]", "kind": "member", "signature": "(self, note_id: int, *, title: str | None, content: str | None)", "scope": "NotesService", "scopeKind": "class"}], "hash": "a2f789da74e10beb553c19b8afc1089a", "format-version": 4, "code-base-name": "notes_backend", "filename": "notes_backend/src/api/services/notes_service.py", "revision_history": [{"22": ""}]}