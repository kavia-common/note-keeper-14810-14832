{"is_source_file": true, "format": "Python", "description": "This file defines the NotesRepository class which provides CRUD operations for Note model objects, interacting with a SQL database via SQLAlchemy ORM.", "external_files": ["../models/note"], "external_methods": ["sqlalchemy.orm.select", "sqlalchemy.orm.delete", "session.scalars", "session.get", "session.add", "session.commit", "session.refresh", "session.execute"], "published": ["NotesRepository"], "classes": [{"name": "NotesRepository", "description": "Repository class encapsulating database operations for Note objects."}], "methods": [{"name": "None __init__(self, db: Session)", "description": "Initializes the repository with a database session.", "scope": "NotesRepository", "scopeKind": "class"}, {"name": "list[Note] list_notes(self, skip: int = 0, limit: int = 50)", "description": "Returns a list of notes with optional pagination.", "scope": "NotesRepository", "scopeKind": "class"}, {"name": "Optional[Note] get_note(self, note_id: int)", "description": "Retrieves a note by its ID.", "scope": "NotesRepository", "scopeKind": "class"}, {"name": "Note create_note(self, title: str, content: str)", "description": "Creates a new note with a title and content.", "scope": "NotesRepository", "scopeKind": "class"}, {"name": "Note update_note(self, note: Note, *, title: str | None = None, content: str | None = None)", "description": "Updates an existing note's title and/or content.", "scope": "NotesRepository", "scopeKind": "class"}, {"name": "bool delete_note(self, note_id: int)", "description": "Deletes a note by its ID and returns success status.", "scope": "NotesRepository", "scopeKind": "class"}], "calls": ["select(Note)", "self.db.scalars", "self.db.get", "self.db.add", "self.db.commit", "self.db.refresh", "delete(Note).where(Note.id == note_id)", "self.db.execute"], "search-terms": ["NotesRepository", "CRUD for Note", "SQLAlchemy repository", "notes_backend/src/api/repositories"], "state": 2, "file_id": 9, "knowledge_revision": 20, "git_revision": "", "ctags": [{"_type": "tag", "name": "NotesRepository", "path": "/home/kavia/workspace/code-generation/note-keeper-14810-14832/notes_backend/src/api/repositories/notes_repository.py", "pattern": "/^class NotesRepository:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/note-keeper-14810-14832/notes_backend/src/api/repositories/notes_repository.py", "pattern": "/^    def __init__(self, db: Session) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self, db: Session)", "scope": "NotesRepository", "scopeKind": "class"}, {"_type": "tag", "name": "create_note", "path": "/home/kavia/workspace/code-generation/note-keeper-14810-14832/notes_backend/src/api/repositories/notes_repository.py", "pattern": "/^    def create_note(self, title: str, content: str) -> Note:$/", "language": "Python", "typeref": "typename:Note", "kind": "member", "signature": "(self, title: str, content: str)", "scope": "NotesRepository", "scopeKind": "class"}, {"_type": "tag", "name": "delete_note", "path": "/home/kavia/workspace/code-generation/note-keeper-14810-14832/notes_backend/src/api/repositories/notes_repository.py", "pattern": "/^    def delete_note(self, note_id: int) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "member", "signature": "(self, note_id: int)", "scope": "NotesRepository", "scopeKind": "class"}, {"_type": "tag", "name": "get_note", "path": "/home/kavia/workspace/code-generation/note-keeper-14810-14832/notes_backend/src/api/repositories/notes_repository.py", "pattern": "/^    def get_note(self, note_id: int) -> Optional[Note]:$/", "language": "Python", "typeref": "typename:Optional[Note]", "kind": "member", "signature": "(self, note_id: int)", "scope": "NotesRepository", "scopeKind": "class"}, {"_type": "tag", "name": "list_notes", "path": "/home/kavia/workspace/code-generation/note-keeper-14810-14832/notes_backend/src/api/repositories/notes_repository.py", "pattern": "/^    def list_notes(self, skip: int = 0, limit: int = 50) -> list[Note]:$/", "language": "Python", "typeref": "typename:list[Note]", "kind": "member", "signature": "(self, skip: int = 0, limit: int = 50)", "scope": "NotesRepository", "scopeKind": "class"}, {"_type": "tag", "name": "update_note", "path": "/home/kavia/workspace/code-generation/note-keeper-14810-14832/notes_backend/src/api/repositories/notes_repository.py", "pattern": "/^    def update_note(self, note: Note, *, title: str | None = None, content: str | None = None) -/", "language": "Python", "typeref": "typename:Note", "kind": "member", "signature": "(self, note: Note, *, title: str | None = None, content: str | None = None)", "scope": "NotesRepository", "scopeKind": "class"}], "hash": "b4e205d27df4b6c6fdcc9485305f06bc", "format-version": 4, "code-base-name": "notes_backend", "filename": "notes_backend/src/api/repositories/notes_repository.py", "revision_history": [{"20": ""}]}