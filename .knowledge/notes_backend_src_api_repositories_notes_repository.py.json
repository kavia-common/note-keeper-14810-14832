{"is_source_file": true, "format": "Python", "description": "This file defines a class `NotesRepository` that encapsulates CRUD operations for the `Note` model using SQLAlchemy ORM in a backend API context.", "external_files": ["../models/note.py"], "external_methods": ["SQLAlchemy Session methods: scalars, get, add, commit, refresh, execute", "SQLAlchemy select, delete"], "published": ["NotesRepository"], "classes": [{"name": "NotesRepository", "description": "A repository class that abstracts database operations related to notes."}], "methods": [{"name": "None __init__(self, db: Session)", "description": "Initializes the repository with a database session.", "scope": "NotesRepository", "scopeKind": "class"}, {"name": "list[Note] list_notes(self, skip: int = 0, limit: int = 50)", "description": "Retrieves a list of Note instances, with optional pagination.", "scope": "NotesRepository", "scopeKind": "class"}, {"name": "Optional[Note] get_note(self, note_id: int)", "description": "Fetches a single Note by its ID.", "scope": "NotesRepository", "scopeKind": "class"}, {"name": "Note create_note(self, title: str, content: str)", "description": "Creates a new Note with the given title and content.", "scope": "NotesRepository", "scopeKind": "class"}, {"name": "Note update_note(self, note: Note, *, title: str | None = None, content: str | None = None)", "description": "Updates the attributes of an existing Note object.", "scope": "NotesRepository", "scopeKind": "class"}, {"name": "bool delete_note(self, note_id: int)", "description": "Deletes a Note by its ID, returning True if successful.", "scope": "NotesRepository", "scopeKind": "class"}], "calls": ["self.db.scalars", "self.db.get", "self.db.add", "self.db.commit", "self.db.refresh", "self.db.execute", "select", "delete"], "search-terms": ["notes_repository", "Note CRUD", "SQLAlchemy repository", "notes database operations"], "state": 2, "file_id": 9, "knowledge_revision": 39, "git_revision": "15cb0308f5fca6b812107cf85a67decd563d3df3", "revision_history": [{"20": ""}, {"39": "15cb0308f5fca6b812107cf85a67decd563d3df3"}], "ctags": [{"_type": "tag", "name": "NotesRepository", "path": "/home/kavia/workspace/code-generation/note-keeper-14810-14832/notes_backend/src/api/repositories/notes_repository.py", "pattern": "/^class NotesRepository:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/note-keeper-14810-14832/notes_backend/src/api/repositories/notes_repository.py", "pattern": "/^    def __init__(self, db: Session) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self, db: Session)", "scope": "NotesRepository", "scopeKind": "class"}, {"_type": "tag", "name": "create_note", "path": "/home/kavia/workspace/code-generation/note-keeper-14810-14832/notes_backend/src/api/repositories/notes_repository.py", "pattern": "/^    def create_note(self, title: str, content: str) -> Note:$/", "language": "Python", "typeref": "typename:Note", "kind": "member", "signature": "(self, title: str, content: str)", "scope": "NotesRepository", "scopeKind": "class"}, {"_type": "tag", "name": "delete_note", "path": "/home/kavia/workspace/code-generation/note-keeper-14810-14832/notes_backend/src/api/repositories/notes_repository.py", "pattern": "/^    def delete_note(self, note_id: int) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "member", "signature": "(self, note_id: int)", "scope": "NotesRepository", "scopeKind": "class"}, {"_type": "tag", "name": "get_note", "path": "/home/kavia/workspace/code-generation/note-keeper-14810-14832/notes_backend/src/api/repositories/notes_repository.py", "pattern": "/^    def get_note(self, note_id: int) -> Optional[Note]:$/", "language": "Python", "typeref": "typename:Optional[Note]", "kind": "member", "signature": "(self, note_id: int)", "scope": "NotesRepository", "scopeKind": "class"}, {"_type": "tag", "name": "list_notes", "path": "/home/kavia/workspace/code-generation/note-keeper-14810-14832/notes_backend/src/api/repositories/notes_repository.py", "pattern": "/^    def list_notes(self, skip: int = 0, limit: int = 50) -> list[Note]:$/", "language": "Python", "typeref": "typename:list[Note]", "kind": "member", "signature": "(self, skip: int = 0, limit: int = 50)", "scope": "NotesRepository", "scopeKind": "class"}, {"_type": "tag", "name": "update_note", "path": "/home/kavia/workspace/code-generation/note-keeper-14810-14832/notes_backend/src/api/repositories/notes_repository.py", "pattern": "/^    def update_note(self, note: Note, *, title: str | None = None, content: str | None = None) -/", "language": "Python", "typeref": "typename:Note", "kind": "member", "signature": "(self, note: Note, *, title: str | None = None, content: str | None = None)", "scope": "NotesRepository", "scopeKind": "class"}], "hash": "70eb3e4fd6d1873cc6909bb57162de68", "format-version": 4, "code-base-name": "notes_backend", "filename": "notes_backend/src/api/repositories/notes_repository.py"}